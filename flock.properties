# the port for REST
flock.http.port=8080


# config for database connections for both primary and replica
# Replica is used for readonly queries. If no replica, use the same as primary
flock.rds.adapter=mysql
flock.rds.port=3306
flock.rds.timeout=5000
flock.rds.host=localhost
flock.rds.database=flockopen
flock.rds.user=root
flock.rds.password=root

flockreplica.rds.adapter=mysql
flockreplica.rds.port=3306
flockreplica.rds.timeout=5000
flockreplica.rds.host=localhost
flockreplica.rds.database=flockopen
flockreplica.rds.user=root
flockreplica.rds.password=root

# config for log database
flocklog.rds.adapter=mysql
flocklog.rds.port=3306
flocklog.rds.timeout=5000
flocklog.rds.host=localhost
flocklog.rds.database=flocklogopen
flocklog.rds.user=root
flocklog.rds.password=root

# graphite hosts connection
graphite.tcp.host=graphite-proxy01.test.com:2003

# memcache configs
memcached.timeout=4000
memcached.maxbatch=15
memcached.downlimit=20
memcached.hosts=localhost:11211


# flag to indicate if flock logs the start task event in flocklog db
flock.log.task.start=false

# flag to indicate if flock logs the complete task event in flocklog db
flock.log.task.complete=true

# flag to indicate if flock logs the expire task event
# Expire event fires when task reserved by a worker but the worker is
# presumed dead (lost connection to db)
flock.log.task.expire=true

# number of task flock server retrieves in back before distributes to workers
flock.task.cache.size=5000

# number of seconds for worker heartbeat. Worker client should update
# its heartbeat (calling rest put /worker/<wid> every <heartbeat> sec
flock.worker.heartbeat=5

# number of heartbeats that can be skipped before the worker is
# presumed dead, where all the tasks it reserved will be released
# with no change in eta
flock.worker.max.skipped.heartbeats=5

# moniter thread fixed delay to check for dead worker
flock.worker.monitor.cycle.sec=10

# number of seconds for flock server heartbeat.
flock.server.heartbeat=5

# number of server heartbeats that can be skipped before the server is
# presumed dead and server slot is recalculated
flock.server.max.skipped.heartbeats=4

# moniter thread fixed delay to check for dead servers
flock.server.monitor.cycle.sec=10

# minimum delay btwn pulling db for more task to fill cache
flock.task.cache.min.pull.interval.secs=2

# configure future task counting metrics
# list of environment ids for which future in from of 1,2,4
flock.task.metrics.future-count-eids=1

# number of days the future for upcoming task metrics
flock.task.metrics.future-count-days=5

# seconds for metrics slot interval
flock.task.metrics.future-count-interval-secs=60

# seconds for metrics slot interval
flock.task.metrics.future-report-secs=5

