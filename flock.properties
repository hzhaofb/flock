# the port for REST
flock.http.port=8080


# config for database connections for both primary and replica
flock.db.adapter=mysql
flock.db.port=3306
flock.db.timeout=5000
flock.db.host=localhost
flock.db.database=flockopen
flock.db.user=root
flock.db.password=root

# flag to indicate if flock logs the start task event in flocklog db
flock.log.task.start=false

# flag to indicate if flock logs the complete task event in flocklog db
flock.log.task.complete=true

# flag to indicate if flock logs the expire task event
# Expire event fires when task reserved by a worker but the worker is
# presumed dead (lost connection to db)
flock.log.task.expire=true

# number of task flock server retrieves in back before distributes to workers
flock.task.cache.size=5000

# number of seconds for worker heartbeat. Worker client should update
# its heartbeat (calling rest put /worker/<wid> every <heartbeat> sec
flock.worker.heartbeat=5

# number of heartbeats that can be skipped before the worker is
# presumed dead, where all the tasks it reserved will be released
# with no change in eta
flock.worker.max.skipped.heartbeats=5

# moniter thread fixed delay to check for dead worker
flock.worker.monitor.cycle.sec=10

# number of seconds for flock server heartbeat.
flock.server.heartbeat=5

# number of server heartbeats that can be skipped before the server is
# presumed dead and server slot is recalculated
flock.server.max.skipped.heartbeats=4

# moniter thread fixed delay to check for dead servers
flock.server.monitor.cycle.sec=10

# minimum delay btwn pulling db for more task to fill cache
flock.task.cache.min.pull.interval.secs=2

